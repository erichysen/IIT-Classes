*****************************************************************************************
The results of the program are not entirely as I expected. They show that Tannenbaum's
solution is far quciker than both the footman and left-hand methods. Tannenbaum's 
solution has the greatest level of concurrency for multiple philosophers wanting to eat. 
Although there is a lot of overhead with the ammount of code needed for Tannenbaum's 
solution, it is much faster because of the test that occurs after any philosopher 
finishes eating.  The test updates the philosophers nearby and allows for a much quicker 
transition instead of waiting when blocked like in the left-hand and footman solutions.  
I thought the footman method would be the slowest because the number of "allowed" attempts at dining
is arbitrarily determining the maximum concurrency and in order to get the best results,
the number of diners must be known as well as the meals and used to determine what is the
optimal number of permitted attempts at dining. The tannenbaum solution permits that anyone that has 
the ability to eat, can eat. It seems as though the left-hand version is slowest when more philosophers dine
because based on my implementation of footman, footman has less of the oppertunity of blocking concurrent
threads because only a limited number of threads can run in the first place. 

The following output has been generated by my program.

Running dining philosophers simulation: 5 philosophers, 5 meals each.
1.Footman solution, time elapsed: 7.935310668999591s
2.Left-handed solution, time elapsed: 6.678957380999236s
3.Tanenbaum's solution, time elapsed: 4.7448817509994115s

Running dining philosophers simulation: 10 philosophers, 5 meals each.
1.Footman solution, time elapsed: 7.396751577000032s
2.Left-handed solution, time elapsed: 9.415629537999848s
3.Tanenbaum's solution, time elapsed: 4.8243193560010695s

Running dining philosophers simulation: 10 philosophers, 20 meals each.
1.Footman solution, time elapsed: 29.58744893400035s
2.Left-handed solution, time elapsed: 37.666437041998506s
3.Tanenbaum's solution, time elapsed: 19.299913431999812s

Running dining philosophers simulation: 15 philosophers, 20 meals each.
1.Footman solution, time elapsed: 37.67559673699907s
2.Left-handed solution, time elapsed: 34.4514430800009s
3.Tanenbaum's solution, time elapsed: 19.403093031000026s


